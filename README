EVM (EVENT MACHINE) SOFTWARE PROJECT
====================================

--------------------------------------------------------------------
   Copyright 2019 Samo Pogacnik <samo_pogacnik@t-2.net>

The EVM software project is provided under the terms of the
Apache License, Version 2.0, which is available in the LICENSE file
of this project.
--------------------------------------------------------------------

The EVM (EVent Machine) software is a C library named libevm. Its public
API is defined in "libevm.h".

Features:
=========
- Check "design-notes" under docs...

Building:
=========

Configure:
----------
samo@hp450g3:~/Code/U2UP/evm$ 
samo@hp450g3:~/Code/U2UP/evm$ env BUILDIR=./build PREFIX=/usr/local ./configure
Sources absolute path (_SRCDIR_): /home/samo/Code/U2UP/evm
Build absolute path (_BUILDIR_): /home/samo/Code/U2UP/evm/build
Sources relative path (SRCDIR): .
Build relative path (BUILDIR): .build/
Target absolute installation prefix path (PREFIX): /usr/local
--
Later (in the installation command), you may provide additional absolute
target installation path prefix via the DESTDIR environment variable!
--
Creating the build directory...

No extra environment shell script provided to configure!

make: Entering directory '/home/samo/Code/U2UP/evm'
/home/samo/Code/U2UP/evm/automk/default.sh generate_makefile .
generate_makefile: /home/samo/Code/U2UP/evm/.build/./auto.mk
Done!
/home/samo/Code/U2UP/evm/automk/default.sh submakes_config .
submakes_config: /home/samo/Code/U2UP/evm/automk/configure.mk configure
make[1]: Entering directory '/home/samo/Code/U2UP/evm/libs'
/home/samo/Code/U2UP/evm/automk/default.sh generate_makefile libs
generate_makefile: /home/samo/Code/U2UP/evm/.build/libs/auto.mk
Done!
/home/samo/Code/U2UP/evm/automk/default.sh submakes_config libs
submakes_config: /home/samo/Code/U2UP/evm/automk/configure.mk configure
make[2]: Entering directory '/home/samo/Code/U2UP/evm/libs/evm'
/home/samo/Code/U2UP/evm/automk/default.sh generate_makefile libs/evm
generate_makefile: /home/samo/Code/U2UP/evm/.build/libs/evm/auto.mk
Done!
/home/samo/Code/U2UP/evm/automk/default.sh submakes_config libs/evm
make[2]: Leaving directory '/home/samo/Code/U2UP/evm/libs/evm'
make[1]: Leaving directory '/home/samo/Code/U2UP/evm/libs'
submakes_config: /home/samo/Code/U2UP/evm/automk/configure.mk configure
make[1]: Entering directory '/home/samo/Code/U2UP/evm/demos'
/home/samo/Code/U2UP/evm/automk/default.sh generate_makefile demos
generate_makefile: /home/samo/Code/U2UP/evm/.build/demos/auto.mk
Done!
/home/samo/Code/U2UP/evm/automk/default.sh submakes_config demos
make[1]: Leaving directory '/home/samo/Code/U2UP/evm/demos'
make: Leaving directory '/home/samo/Code/U2UP/evm'
samo@hp450g3:~/Code/U2UP/evm$ 

Make:
-----
samo@hp450g3:~/Code/U2UP/evm$ 
samo@hp450g3:~/Code/U2UP/evm$ make
/home/samo/Code/U2UP/evm/automk/default.sh targets_make all
Sources absolute path (_SRCDIR_): /home/samo/Code/U2UP/evm
Build absolute path (_BUILDIR_): /home/samo/Code/U2UP/evm/.build
Target absolute installation prefix path (PREFIX): /usr/local
Additional absolute target installation path prefix (DESTDIR): 

No extra environment shell script provided to configure!

targets_make: /home/samo/Code/U2UP/evm/.build/./libs/auto.mk all
make[1]: Entering directory '/home/samo/Code/U2UP/evm/libs'
/home/samo/Code/U2UP/evm/automk/default.sh targets_make all
targets_make: /home/samo/Code/U2UP/evm/.build/libs/evm/auto.mk all
make[2]: Entering directory '/home/samo/Code/U2UP/evm/libs/evm'
/home/samo/Code/U2UP/evm/automk/default.sh targets_make all
targets_make: /home/samo/Code/U2UP/evm/libs/evm/libevm.mk all
make[3]: Entering directory '/home/samo/Code/U2UP/evm/libs/evm'
...
make[3]: Leaving directory '/home/samo/Code/U2UP/evm/libs/evm'
make[2]: Leaving directory '/home/samo/Code/U2UP/evm/libs/evm'
make[1]: Leaving directory '/home/samo/Code/U2UP/evm/libs'
targets_make: /home/samo/Code/U2UP/evm/.build/./demos/auto.mk all
make[1]: Entering directory '/home/samo/Code/U2UP/evm/demos'
...
make[1]: Leaving directory '/home/samo/Code/U2UP/evm/demos'
samo@hp450g3:~/Code/U2UP/evm$ 

Install:
--------
samo@hp450g3:~/Code/U2UP/evm$ 
samo@hp450g3:~/Code/U2UP/evm$ env DESTDIR=$(pwd)/install make install
/home/samo/Code/U2UP/evm/automk/default.sh targets_make install
Sources absolute path (_SRCDIR_): /home/samo/Code/U2UP/evm
Build absolute path (_BUILDIR_): /home/samo/Code/U2UP/evm/.build
Target absolute installation prefix path (PREFIX): /usr/local
Additional absolute target installation path prefix (DESTDIR): /home/samo/Code/U2UP/evm/install

No extra environment shell script provided to configure!

targets_make: /home/samo/Code/U2UP/evm/.build/./libs/auto.mk install
make[1]: Entering directory '/home/samo/Code/U2UP/evm/libs'
/home/samo/Code/U2UP/evm/automk/default.sh targets_make install
targets_make: /home/samo/Code/U2UP/evm/.build/libs/evm/auto.mk install
make[2]: Entering directory '/home/samo/Code/U2UP/evm/libs/evm'
/home/samo/Code/U2UP/evm/automk/default.sh targets_make install
targets_make: /home/samo/Code/U2UP/evm/libs/evm/libevm.mk install
make[3]: Entering directory '/home/samo/Code/U2UP/evm/libs/evm'
...
make[3]: Leaving directory '/home/samo/Code/U2UP/evm/libs/evm'
make[2]: Leaving directory '/home/samo/Code/U2UP/evm/libs/evm'
make[1]: Leaving directory '/home/samo/Code/U2UP/evm/libs'
targets_make: /home/samo/Code/U2UP/evm/.build/./demos/auto.mk install
make[1]: Entering directory '/home/samo/Code/U2UP/evm/demos'
/home/samo/Code/U2UP/evm/automk/default.sh targets_make install
...
make[1]: Leaving directory '/home/samo/Code/U2UP/evm/demos'
samo@hp450g3:~/Code/U2UP/evm$ 

Clean:
------
samo@hp450g3:~/Code/U2UP/evm$ 
samo@hp450g3:~/Code/U2UP/evm$ make clean
/home/samo/Code/U2UP/evm/automk/default.sh targets_make clean
Sources absolute path (_SRCDIR_): /home/samo/Code/U2UP/evm
Build absolute path (_BUILDIR_): /home/samo/Code/U2UP/evm/.build
Target absolute installation prefix path (PREFIX): /usr/local
Additional absolute target installation path prefix (DESTDIR): 

No extra environment shell script provided to configure!

targets_make: /home/samo/Code/U2UP/evm/.build/./libs/auto.mk clean
make[1]: Entering directory '/home/samo/Code/U2UP/evm/libs'
/home/samo/Code/U2UP/evm/automk/default.sh targets_make clean
targets_make: /home/samo/Code/U2UP/evm/.build/libs/evm/auto.mk clean
make[2]: Entering directory '/home/samo/Code/U2UP/evm/libs/evm'
/home/samo/Code/U2UP/evm/automk/default.sh targets_make clean
targets_make: /home/samo/Code/U2UP/evm/libs/evm/libevm.mk clean
make[3]: Entering directory '/home/samo/Code/U2UP/evm/libs/evm'
...
make[3]: Leaving directory '/home/samo/Code/U2UP/evm/libs/evm'
make[2]: Leaving directory '/home/samo/Code/U2UP/evm/libs/evm'
make[1]: Leaving directory '/home/samo/Code/U2UP/evm/libs'
targets_make: /home/samo/Code/U2UP/evm/.build/./demos/auto.mk clean
make[1]: Entering directory '/home/samo/Code/U2UP/evm/demos'
/home/samo/Code/U2UP/evm/automk/default.sh targets_make clean
...
make[1]: Leaving directory '/home/samo/Code/U2UP/evm/demos'
samo@hp450g3:~/Code/U2UP/evm$ 

If you want to remove all files not under version control and you are using git:
--------------------------------------------------------------------------------
$ git clean -d -f -x

Demos:
======
Programs included under "demos" directory demonstrate usage of the framework.

"hello1_evm" - Minimal framework utilization by sending HELLO message to itself
on every IDLE timer expiration. Sending messages to ourself may be accomplished
directly in framework without any system call (as in this demo).

"hello2_evm" - This demo shows sending message between two processes. The parent
process sends the first HELLO message to its child process. Every received
message in a child or parent process sets new timeout and another HELLO
message is sent back to the sender process after timeout expiration.

"hello3_evm" - This a threaded version of the second demo. The first
thread sends the first HELLO message to the second thread. Every received
message in any thread sets new timeout and another HELLO message is sent back
to the sender thread after timeout expiration.

"hello4_evm" - This is the one to many threaded example. The initial thread
spawns requested number of other threads and sets QUIT timer. Each other thread
sends initial HELLO message to the first thread. Every received message in any
thread sets a new IDLE timeout and another HELLO message is sent back to the
sender thread after timeout expiration.

"hello5_evm" - This is the one to many threaded example like "hello4". The
difference is, that initial thread posts a message to a topic, instead of sending
individual messages to each additional thread. Additional threads are being
subscribed to this topic at their creation.

